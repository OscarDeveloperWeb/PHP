ok solucion de 1.-
<?PHP
function factorial($numero){
    if($numero==1){
        return $numero;
    }
    elseif($numero>0){
        $factorial=$numero*(factorial($numero-1));
    }
    else{
        return $numero;
    }
    return $factorial;
}
$numero=10;
$factorial=factorial($numero);
echo "El factorial de ".$numero." es ".$factorial;
2.-
<?PHP
function esPrimo($numero){
    if($numero <=1){
        return false;
    }
    for  ($i=2;$i<=sqrt($numero);$i++){
            if($numero%$i==0 ){
                return false;
            }
    }
    return true;    
}
$numero=11;
echo "El numero ".$numero."<br>";
echo esPrimo($numero) ? " Es primo <br>" : " No es primo <br>";
3.-
<?PHP
function fibonacci($n){
    if($n<=1){
        return $n;
    }
    else{
        $a=2;
        $b=1;
        $c=1;
       while ($a<$n){//3
        $a++;
        $b=$b+$c;//2,3,5,8,13,21
        $c=$b-$c;//1,2,3,5,8,13
       }
       return $b;
    }
}
$numero=10;
$fibo=fibonacci($numero);
echo "El ".$numero." enecimo numero es : ";
echo $fibo; 
4.-
<?php
function sumaDigitos($numero){
    $resultado=0;
    $decena=1;
    while($numero !=0 ){
        if((int)($numero/$decena)<=9 ){
            $resultado += ((int)($numero/$decena));//1,3,6
            $numero -= (($decena)*((int)($numero/$decena))) ;//23,3,0
            $decena/=10;//10,1
        }else{
            $decena*=10;
        }
    }
    return $resultado;
}

echo sumaDigitos(12345);


5.-
<?php

$numero=101;
$resultado=0;
$lista1=[];
$decena=1;
while($numero >=0){
    if(($numero ==0) &&($decena > ) ){
        array_push($lista1,$numero );
        break;
    }
    elseif((int)($numero/$decena)<=9 ){
        array_push($lista1, ((int)($numero/$decena)) );//
        $resultado += ((int)($numero/$decena));//
        $numero -= (($decena)*((int)($numero/$decena))) ;//
        $decena/=10;//
        
    }else{
        $decena*=10;//100
    }
}

$lista2=array_reverse($lista1);
print_r($lista1);
echo "<br>";
print_r($lista2);

if($resultado==0){
    echo 0;
}elseif($lista1===$lista2){
    echo"Si es";
}else{
    echo "No es";
}
fibonachi
<?php
// Función para generar una lista de números Fibonacci
function fibonacciList($n) {
    $fib = [0, 1];
    for ($i = 2; $i < $n; $i++) {
        $fib[$i] = $fib[$i-1] + $fib[$i-2];
    }
    return $fib;
}

// Función para obtener el enésimo número de Fibonacci
function fibonacci($n) {
    if ($n <= 1) {
        return $n;
    }
    $a = 0;
    $b = 1;
    for ($i = 2; $i <= $n; $i++) {
        $c = $a + $b;
        $a = $b;
        $b = $c;
    }
    return $b;
}

// Número de términos
$num_terms = 10;
$fib_list = fibonacciList($num_terms);
$enésimo = 5; // Cambia este valor para obtener el enésimo número de Fibonacci

echo "Lista de Fibonacci hasta $num_terms términos:\n";
print_r($fib_list);

echo "El $enésimo número de Fibonacci es: " . fibonacci($enésimo) . "\n";
?>

primo
<?php
// Función para verificar si un número es primo
function esPrimo($numero) {
    if ($numero <= 1) {
        return false;
    }
    if ($numero == 2) {
        return true;
    }
    if ($numero % 2 == 0) {
        return false;
    }
    $limite = sqrt($numero);
    for ($i = 3; $i <= $limite; $i += 2) {
        if ($numero % $i == 0) {
            return false;
        }
    }
    return true;
}

// Número para verificar
$numero = 29; // Cambia este valor para verificar otros números

if (esPrimo($numero)) {
    echo "$numero es un número primo.\n";
} else {
    echo "$numero no es un número primo.\n";
}
?>
lsitas
// Agregar elementos
array_push($frutas, "pera");
// Eliminar el último elemento
array_pop($frutas);
// Eliminar un elemento por su valor
$key = array_search("banana", $frutas);
if ($key !== false) {
    unset($frutas[$key]);
}// Ordenar en orden ascendente
sort($numeros);
// Ordenar en orden descendente
rsort($numeros);
// Ordenar un array asociativo por valores
$edad = ["Juan" => 25, "Ana" => 30, "Luis" => 22];
asort($edad);
// Ordenar un array asociativo por claves
ksort($edad);
// Buscar la clave de un valor en un array asociativo
$key = array_search("naranja", $frutas);
if ($key !== false) {
    echo "La naranja está en la posición: " . $key . "\n";
}
?>
<?php
$numeros = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

// Filtrar números pares
$pares = array_filter($numeros, function($numero) {
    return $numero % 2 == 0;
});
print_r($pares);

// Mapear números para obtener sus cuadrados
$cuadrados = array_map(function($numero) {
    return $numero * $numero;
}, $numeros);
print_r($cuadrados);
?>

convian 
<?php
$array1 = [1, 2, 3];
$array2 = [4, 5, 6];

// Combinar arrays
$combinado = array_merge($array1, $array2);
print_r($combinado);

// Dividir un array en fragmentos
$fragmentos = array_chunk($combinado, 3);
print_r($fragmentos);
?>
ordenar
<?php
// Array asociativo
$personas = [
    ["nombre" => "Juan", "edad" => 25],
    ["nombre" => "Ana", "edad" => 30],
    ["nombre" => "Luis", "edad" => 22],
];

// Ordenar array asociativo por una clave (edad)
usort($personas, function($a, $b) {
    return $a['edad'] - $b['edad'];
});
print_r($personas);

// Obtener las claves de un array
$claves = array_keys($personas[0]);
print_r($claves);
?>


